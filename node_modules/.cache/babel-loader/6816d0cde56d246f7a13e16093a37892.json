{"ast":null,"code":"import _objectSpread from \"C:\\\\laragon\\\\www\\\\hooks-todos\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport uuidv4 from 'uuid/v4';\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"GET_TODOS\":\n      return _objectSpread({}, state, {\n        todos: action.payload\n      });\n\n    case \"TOGGLE_TODO\":\n      const toggledTodos = state.todos.map(t => t.id === action.payload.id ? action.payload //  { ...action.payload, complete: !action.payload.complete}\n      : t);\n      return _objectSpread({}, state, {\n        todos: toggledTodos\n      });\n\n    case \"UPDATE_TODO\":\n      // if(!action.payload){\n      //   return state;\n      // }\n      // if(state.todos.findIndex( t => t.text === action.payload) > -1) {\n      //   return state;\n      // }\n      const updatedTodo = _objectSpread({}, action.payload);\n\n      const updatedTodoIndex = state.todos.findIndex(t => t.id === state.currentTodo.id);\n      const updatedTodos = [...state.todos.slice(0, updatedTodoIndex), updatedTodo, ...state.todos.slice(updatedTodoIndex + 1)];\n      return _objectSpread({}, state, {\n        currentTodo: {},\n        todos: updatedTodos\n      });\n\n    case \"REMOVE_TODO\":\n      const filteredTodos = state.todos.filter(t => t.id !== action.payload.id);\n      const isRemovedTodo = state.currentTodo.id === action.payload.id ? {} : state.currentTodo;\n      return _objectSpread({}, state, {\n        currentTodo: isRemovedTodo,\n        todos: filteredTodos\n      });\n\n    case \"SET_CURRENT_TODO\":\n      return _objectSpread({}, state, {\n        currentTodo: action.payload\n      });\n    // update currentTodo value with action.payload\n\n    case \"ADD_TODO\":\n      // if(!action.payload){\n      //   return state;\n      // }\n      // if(state.todos.findIndex( t => t.text === action.payload) > -1) {\n      //   return state;\n      // }\n      // set unique id,\n      // const newTodo = {\n      //   id: uuidv4(),\n      //   text: action.payload,\n      //   complete: false\n      // };\n      // add new todo object to array of previously created todos\n      // add it onto end of array using spread  operator\n      const addedTodos = [...state.todos, action.payload]; // return object with updated todos array of addedTodos\n\n      return _objectSpread({}, state, {\n        todos: addedTodos\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\laragon\\www\\hooks-todos\\src\\reducer.js"],"names":["uuidv4","reducer","state","action","type","todos","payload","toggledTodos","map","t","id","updatedTodo","updatedTodoIndex","findIndex","currentTodo","updatedTodos","slice","filteredTodos","filter","isRemovedTodo","addedTodos"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,SAAnB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFhB;;AAIF,SAAK,aAAL;AACE,YAAMC,YAAY,GAAGL,KAAK,CAACG,KAAN,CAAYG,GAAZ,CAAgBC,CAAC,IACpCA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACG,OAAP,CAAeI,EAAxB,GACAP,MAAM,CAACG,OADP,CAEA;AAFA,QAGGG,CAJgB,CAArB;AAKG,+BACKP,KADL;AAEEG,QAAAA,KAAK,EAAEE;AAFT;;AAIL,SAAK,aAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACD,YAAMI,WAAW,qBAAOR,MAAM,CAACG,OAAd,CAAjB;;AACA,YAAMM,gBAAgB,GAAGV,KAAK,CAACG,KAAN,CAAYQ,SAAZ,CACvBJ,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,KAAK,CAACY,WAAN,CAAkBJ,EADT,CAAzB;AAGD,YAAMK,YAAY,GAAG,CACnB,GAAGb,KAAK,CAACG,KAAN,CAAYW,KAAZ,CAAkB,CAAlB,EAAqBJ,gBAArB,CADgB,EAEjBD,WAFiB,EAGnB,GAAGT,KAAK,CAACG,KAAN,CAAYW,KAAZ,CAAkBJ,gBAAgB,GAAG,CAArC,CAHgB,CAArB;AAKA,+BACKV,KADL;AAEEY,QAAAA,WAAW,EAAE,EAFf;AAGET,QAAAA,KAAK,EAAEU;AAHT;;AAKF,SAAK,aAAL;AACE,YAAME,aAAa,GAAGf,KAAK,CAACG,KAAN,CAAYa,MAAZ,CAAoBT,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACG,OAAP,CAAeI,EAAjD,CAAtB;AACA,YAAMS,aAAa,GAAGjB,KAAK,CAACY,WAAN,CAAkBJ,EAAlB,KAAyBP,MAAM,CAACG,OAAP,CAAeI,EAAxC,GAA6C,EAA7C,GAAkDR,KAAK,CAACY,WAA9E;AACA,+BACKZ,KADL;AAEEY,QAAAA,WAAW,EAAEK,aAFf;AAGEd,QAAAA,KAAK,EAAEY;AAHT;;AAKF,SAAK,kBAAL;AACE,+BACKf,KADL;AAEEY,QAAAA,WAAW,EAAEX,MAAM,CAACG;AAFtB;AAGI;;AACN,SAAK,UAAL;AACG;AACA;AACA;AACA;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMc,UAAU,GAAG,CAAC,GAAGlB,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB,CAAnB,CAfF,CAgBE;;AACA,+BACKJ,KADL;AAEEG,QAAAA,KAAK,EAAEe;AAFT;;AAIF;AACE,aAAOlB,KAAP;AAxEJ;AA0ED","sourcesContent":["import uuidv4 from 'uuid/v4';\r\n\r\nexport default function reducer(state, action){\r\n  switch(action.type){\r\n    case \"GET_TODOS\":\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n      };\r\n    case \"TOGGLE_TODO\":\r\n      const toggledTodos = state.todos.map(t =>\r\n        t.id === action.payload.id  ?\r\n        action.payload\r\n        //  { ...action.payload, complete: !action.payload.complete}\r\n         : t);\r\n         return {\r\n           ...state,\r\n           todos: toggledTodos\r\n         };\r\n    case \"UPDATE_TODO\":\r\n        // if(!action.payload){\r\n        //   return state;\r\n        // }\r\n        // if(state.todos.findIndex( t => t.text === action.payload) > -1) {\r\n        //   return state;\r\n        // }\r\n       const updatedTodo = {...action.payload };\r\n       const updatedTodoIndex = state.todos.findIndex(\r\n         t => t.id === state.currentTodo.id\r\n       );\r\n      const updatedTodos = [\r\n        ...state.todos.slice(0, updatedTodoIndex),\r\n          updatedTodo,\r\n        ...state.todos.slice(updatedTodoIndex + 1)\r\n      ]\r\n      return {\r\n        ...state,\r\n        currentTodo: {},\r\n        todos: updatedTodos\r\n      };\r\n    case \"REMOVE_TODO\":\r\n      const filteredTodos = state.todos.filter( t => t.id !== action.payload.id)\r\n      const isRemovedTodo = state.currentTodo.id === action.payload.id ? {} : state.currentTodo;\r\n      return {\r\n        ...state,\r\n        currentTodo: isRemovedTodo,\r\n        todos: filteredTodos\r\n      };\r\n    case \"SET_CURRENT_TODO\":\r\n      return {\r\n        ...state,\r\n        currentTodo: action.payload\r\n      };  // update currentTodo value with action.payload\r\n    case \"ADD_TODO\":\r\n       // if(!action.payload){\r\n       //   return state;\r\n       // }\r\n       // if(state.todos.findIndex( t => t.text === action.payload) > -1) {\r\n       //   return state;\r\n       // }\r\n      // set unique id,\r\n      // const newTodo = {\r\n      //   id: uuidv4(),\r\n      //   text: action.payload,\r\n      //   complete: false\r\n      // };\r\n      // add new todo object to array of previously created todos\r\n      // add it onto end of array using spread  operator\r\n      const addedTodos = [...state.todos, action.payload]\r\n      // return object with updated todos array of addedTodos\r\n      return {\r\n        ...state,\r\n        todos: addedTodos\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:\\\\laragon\\\\www\\\\hooks-todos\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\laragon\\\\www\\\\hooks-todos\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport uuidv4 from 'uuid/v4';\nimport TodosContext from '../context'; // provides dispatch\n\nexport default function TodoForm() {\n  // call useState hook\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1]; // destructure to grab currentTodo\n\n\n  const _useContext = useContext(TodosContext),\n        _useContext$state$cur = _useContext.state.currentTodo,\n        currentTodo = _useContext$state$cur === void 0 ? {} : _useContext$state$cur,\n        dispatch = _useContext.dispatch; // has currentTodo in form object been updated?\n  // if yes, display currentTodo in input\n\n\n  useEffect(() => {\n    if (currentTodo.text) {\n      setTodo(currentTodo.text);\n    } else {\n      setTodo(\"\");\n    }\n  }, // run useEffect only when the currentTodo changes.\n  [currentTodo.id]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (currentTodo.text) {\n      const response = await axios.patch(\"https://hooks-api.ellizzabbetth.now.sh/todos/\".concat(currentTodo.id), {\n        text: todo\n      });\n      dispatch({\n        type: \"UPDATE_TODO\",\n        payload: response.data\n      });\n    } else {\n      const response = await axios.post('https://hooks-api.ellizzabbetth.now.sh/todos', {\n        id: uuidv4(),\n        text: todo,\n        complete: false\n      }); // dispatch function sends data in todo to reducer\n\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: response.data\n      });\n    }\n\n    setTodo(\"\");\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex justify-center p-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"border-black border-solid border-2\",\n    onChange: event => setTodo(event.target.value),\n    value: todo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\laragon\\www\\hooks-todos\\src\\components\\TodoForm.js"],"names":["React","useState","useEffect","useContext","axios","uuidv4","TodosContext","TodoForm","todo","setTodo","state","currentTodo","dispatch","text","id","handleSubmit","event","preventDefault","response","patch","type","payload","data","post","complete","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,YAAP,MAAyB,YAAzB,C,CAAuC;;AAGvC,eAAe,SAASC,QAAT,GAAmB;AAChC;AADgC,oBAERN,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,QAEzBO,IAFyB;AAAA,QAEnBC,OAFmB,kBAGhC;;;AAHgC,sBAIkBN,UAAU,CAACG,YAAD,CAJ5B;AAAA,4CAIxBI,KAJwB,CAIfC,WAJe;AAAA,QAIfA,WAJe,sCAID,EAJC;AAAA,QAIKC,QAJL,eAIKA,QAJL,EAMhC;AACA;;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,WAAW,CAACE,IAAhB,EAAsB;AACpBJ,MAAAA,OAAO,CAACE,WAAW,CAACE,IAAb,CAAP;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GANQ,EAMJ;AACL,GAACE,WAAW,CAACG,EAAb,CAPS,CAAT;;AAUA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGN,WAAW,CAACE,IAAf,EAAoB;AAClB,YAAMK,QAAQ,GAAG,MAAMd,KAAK,CAACe,KAAN,wDAA4DR,WAAW,CAACG,EAAxE,GAA8E;AACnGD,QAAAA,IAAI,EAAEL;AAD6F,OAA9E,CAAvB;AAGAI,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,aAAP;AAAsBC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,OAAD,CAAR;AACD,KALD,MAKO;AACL,YAAMJ,QAAQ,GAAG,MAAMd,KAAK,CAACmB,IAAN,CAAW,8CAAX,EAA2D;AAChFT,QAAAA,EAAE,EAAET,MAAM,EADsE;AAEhFQ,QAAAA,IAAI,EAAEL,IAF0E;AAGhFgB,QAAAA,QAAQ,EAAE;AAHsE,OAA3D,CAAvB,CADK,CAML;;AACAZ,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAtC,OAAD,CAAR;AACD;;AACDb,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAjBD;;AAmBA,SACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAA8B,IAAA,SAAS,EAAC,yBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,oCAFZ;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACS,MAAN,CAAaC,KAAd,CAH5B;AAIE,IAAA,KAAK,EAAElB,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport uuidv4 from 'uuid/v4';\r\nimport TodosContext from '../context'; // provides dispatch\r\n\r\n\r\nexport default function TodoForm(){\r\n  // call useState hook\r\n  const [todo, setTodo] = useState(\"\");\r\n  // destructure to grab currentTodo\r\n  const { state: { currentTodo = {} }, dispatch } = useContext(TodosContext);\r\n\r\n  // has currentTodo in form object been updated?\r\n  // if yes, display currentTodo in input\r\n\r\n  useEffect(() => {\r\n    if (currentTodo.text) {\r\n      setTodo(currentTodo.text)\r\n    } else {\r\n      setTodo(\"\");\r\n    }\r\n  },   // run useEffect only when the currentTodo changes.\r\n  [currentTodo.id]\r\n);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if(currentTodo.text){\r\n      const response = await axios.patch(`https://hooks-api.ellizzabbetth.now.sh/todos/${currentTodo.id}`, {\r\n        text: todo\r\n      })\r\n      dispatch({type: \"UPDATE_TODO\", payload: response.data});\r\n    } else {\r\n      const response = await axios.post('https://hooks-api.ellizzabbetth.now.sh/todos', {\r\n        id: uuidv4(),\r\n        text: todo,\r\n        complete: false\r\n      });\r\n      // dispatch function sends data in todo to reducer\r\n      dispatch({ type: \"ADD_TODO\", payload: response.data });\r\n    }\r\n    setTodo(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex justify-center p-5\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"border-black border-solid border-2\"\r\n        onChange={event => setTodo(event.target.value)}\r\n        value={todo}\r\n        />\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}